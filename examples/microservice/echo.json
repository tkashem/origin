{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
      "name": "echo",
      "annotations": {
        "openshift.io/display-name": "Self hosted micro service in Go",
        "description": "An example of self hosted micro service in Go. For more information about using this template, including OpenShift considerations, see https://github.com/tkashem/echo-api/blob/master/README.md.",
        "tags": "quickstart,microservice,golang",
        "iconClass": "icon-openshift",
        "openshift.io/long-description": "This template defines resources needed to deploy and scale a self hosted microservice written in Go, including a build configuration and application deployment configuration.",
        "openshift.io/provider-display-name": "Red Hat, Inc.",
        "openshift.io/documentation-url": "https://github.com/tkashem/echo-api",
        "openshift.io/support-url": "https://access.redhat.com"
      }
    },
    "message": "The following service(s) have been created in your project: ${NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/tkashem/echo-api/blob/master/README.md.",
    "labels": {
      "template": "echo"
    },
    "objects": [
      {
        "kind": "Service",
        "apiVersion": "v1",
        "metadata": {
          "name": "${NAME}",
          "annotations": {
            "description": "Exposes and load balances among multiple pods of this microservice"
          }
        },
        "spec": {
          "ports": [
            {
              "name": "web",
              "port": 3000,
              "targetPort": 3000
            }
          ],
          "selector": {
            "name": "${NAME}"
          }
        }
      },
      {
        "kind": "Route",
        "apiVersion": "v1",
        "metadata": {
          "name": "${NAME}",
          "annotations": {
            "template.openshift.io/expose-uri": "http://{.spec.host}{.spec.path}"
          }
        },
        "spec": {
          "host": "${APPLICATION_DOMAIN}",
          "to": {
            "kind": "Service",
            "name": "${NAME}"
          }
        }
      },
      {
        "kind": "DeploymentConfig",
        "apiVersion": "v1",
        "metadata": {
          "name": "${NAME}",
          "annotations": {
            "description": "Defines how to deploy the application server",
            "template.alpha.openshift.io/wait-for-ready": "true"
          }
        },
        "spec": {
          "strategy": {
            "type": "Rolling"
          },
          "triggers": [
            {
              "type": "ImageChange",
              "imageChangeParams": {
                "automatic": true,
                "containerNames": [
                  "echo"
                ],
                "from": {
                  "kind": "ImageStreamTag",
                  "name": "${NAME}:latest"
                }
              }
            },
            {
              "type": "ConfigChange"
            }
          ],
          "replicas": 1,
          "selector": {
            "name": "${NAME}"
          },
          "template": {
            "metadata": {
              "name": "${NAME}",
              "labels": {
                "name": "${NAME}"
              }
            },
            "spec": {
              "containers": [
                {
                  "name": "echo",
                  "image": " ",
                  "ports": [
                    {
                      "containerPort": 8080
                    }
                  ],
                  "readinessProbe": {
                    "timeoutSeconds": 3,
                    "initialDelaySeconds": 3,
                    "httpGet": {
                      "path": "/echo/ping",
                      "port": 3000
                    }
                  },
                  "livenessProbe": {
                      "timeoutSeconds": 3,
                      "initialDelaySeconds": 30,
                      "httpGet": {
                          "path": "/echo/ping",
                          "port": 3000
                      }
                  },
                  "resources": {
                      "limits": {
                          "memory": "${MEMORY_LIMIT}"
                      }
                  },
                  "env": [
                  ],
                  "resources": {
                    "limits": {
                      "memory": "${MEMORY_LIMIT}"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "NAME",
        "displayName": "Name",
        "description": "The name assigned to all of the frontend objects defined in this template.",
        "required": true,
        "value": "echo"
      },
      {
        "name": "NAMESPACE",
        "displayName": "Namespace",
        "description": "The OpenShift Namespace where the ImageStream resides.",
        "required": true,
        "value": "openshift"
      },
      {
        "name": "ECHO_VERSION",
        "displayName": "Echo Microservice Version",
        "description": "Version of the microservice to be used (1.0 by default).",
        "required": true,
        "value": "1.0"
      },
      {
        "name": "MEMORY_LIMIT",
        "displayName": "Memory Limit",
        "description": "Maximum amount of memory the container can use.",
        "required": true,
        "value": "512Mi"
      },
      {
        "name": "SOURCE_REPOSITORY_URL",
        "displayName": "Git Repository URL",
        "description": "The URL of the repository with your application source code.",
        "required": true,
        "value": "https://github.com/tkashem/echo-api.git"
      },
      {
        "name": "SOURCE_REPOSITORY_REF",
        "displayName": "Git Reference",
        "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
      },
      {
        "name": "CONTEXT_DIR",
        "displayName": "Context Directory",
        "description": "Set this to the relative path to your project if it is not in the root of your repository."
      },
      {
        "name": "APPLICATION_DOMAIN",
        "displayName": "Application Hostname",
        "description": "The exposed hostname that will route to the nginx service, if left blank a value will be defaulted.",
        "value": ""
      },
      {
        "name": "GITHUB_WEBHOOK_SECRET",
        "displayName": "GitHub Webhook Secret",
        "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
        "generate": "expression",
        "from": "[a-zA-Z0-9]{40}"
      },
      {
        "name": "GENERIC_WEBHOOK_SECRET",
        "displayName": "Generic Webhook Secret",
        "description": "A secret string used to configure the Generic webhook.",
        "generate": "expression",
        "from": "[a-zA-Z0-9]{40}"
      }
    ]
  }